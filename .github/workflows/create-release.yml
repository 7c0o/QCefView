name: Create Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  # Customize the CMake build type here (Release, Debug)
  BUILD_TYPE: Release

jobs:
  initialize:
    runs-on: ubuntu-latest
    steps:
      - name: Create Version Number
        run: echo TO-DO

  build-windows:
    needs: initialize
    runs-on: windows-latest
    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v2

      - name: Checkout Source
        uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Cache CEF folders
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/CefViewCore/dep
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
          
      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -A x64 -DPROJECT_ARCH=x86_64 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_DEMO=ON -DCMAKE_INSTALL_PREFIX:PATH=${{github.workspace}}/out/install

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Install
        run: cmake --install ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      
      - name: Create SDK artifact
        uses: actions/upload-artifact@v3
        with:
          name: QCefView.windows.x86_64.zip
          path: ${{github.workspace}}/out/install/QCefView

      - name: Create Demo artifact
        uses: actions/upload-artifact@v3
        with:
          name: QCefViewTest.windows.x86_64.zip
          path: ${{github.workspace}}/out/install/QCefViewTest

  build-macos:
    needs: initialize
    runs-on: macos-latest
    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          setup-python: 'false'

      - name: Checkout Source
        uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Cache CEF folders
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/CefViewCore/dep
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      - name: Configure CMake
        run: cmake -G "Xcode" -B ${{github.workspace}}/build -DPROJECT_ARCH=x86_64 -DTARGET_ARCH=x86_64 -DBUILD_DEMO=ON -DUSE_SANDBOX=ON -DCMAKE_INSTALL_PREFIX:PATH=${{github.workspace}}/out/install

      - name: Build
        # Build your program with the given configuration
        run: xcodebuild -project ${{github.workspace}}/build/QCefView.xcodeproj -configuration ${{env.BUILD_TYPE}}

      - name: Install
        # Collect the output
        run: cmake --install ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Create SDK artifact
        uses: actions/upload-artifact@v3
        # Upload artifact
        with:
          name: QCefView.macos.x86_64.zip
          path: ${{github.workspace}}/out/install/QCefView

      - name: Create Demo artifact
        uses: actions/upload-artifact@v3
        # Upload artifact
        with:
          name: QCefViewTest.macos.x86_64.zip
          path: ${{github.workspace}}/out/install/QCefViewTest

  build-linux:
    needs: initialize
    runs-on: ubuntu-latest
    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v2

      - name: Checkout Source
        uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Cache CEF folders
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/CefViewCore/dep
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DPROJECT_ARCH=x86_64 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_DEMO=ON -DUSE_SANDBOX=ON -DCMAKE_INSTALL_PREFIX:PATH=${{github.workspace}}/out/install

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Install
        # Collect the output
        run: cmake --install ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Create SDK artifact
        uses: actions/upload-artifact@v3
        # Upload artifact
        with:
          name: QCefView.linux.x86_64.zip
          path: ${{github.workspace}}/out/install/QCefView

      - name: Create Demo artifact
        uses: actions/upload-artifact@v3
        # Upload artifact
        with:
          name: QCefViewTest.linux.x86_64.zip
          path: ${{github.workspace}}/out/install/QCefViewTest

  # create-release:
  #   needs: [build-windows, build-macos, build-linux]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/download-artifact@v3
  #       with:
  #         path: ${{github.workspace}}/artifacts
  #     - uses: ncipollo/release-action@v1
  #       with:
  #         artifacts: ""
  #         bodyFile: "body.md"
  #         token: ${{ secrets.GITHUB_TOKEN }}
